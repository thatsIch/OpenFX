// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the idea plugin to add support for IntelliJ IDEA
apply plugin: 'idea'


/* We use Java 1.7 */
sourceCompatibility = 1.7
targetCompatibility = 1.7

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    // compile 'org.slf4j:slf4j-api:1.7.5'
    compile "org.encog:encog-core:3.2.0"
    compile "com.google.inject:guice:3.0"
    compile "com.cathive.fx:fx-guice:2.1.3"

    // include all local libs, here OpenCV since no Maven support yet, else use JavaCV
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
    testCompile "org.mockito:mockito-all:1.9.5"
    testCompile "org.jukito:jukito:1.4"
}

idea {
    workspace {
        iws {
            withXML { provider ->
                def applicationDefaults = provider.node.component.find { it.@name == 'RunManager'}.configuration.find { it.@type == 'Application'}
                if (applicationDefaults != null) {
                    applicationDefaults.option.find { it.@name == 'VM_PARAMETERS'}.@value = '-Xmx1024m -XX:MaxPermSize=256m -Xss64k'
                    applicationDefaults.option.find { it.@name == 'WORKING_DIRECTORY'}.@value = 'file://$MODULE_DIR$'
                }
            }
        }
    }

    module {
        //and some extra dirs that should be excluded by IDEA
        excludeDirs += file('.gradle')
        excludeDirs += file('.idea')

        //if you prefer different output folders
        outputDir = file('.idea/build/main')
        testOutputDir = file('.idea/build/test')

        //if you love browsing Javadoc
        downloadJavadoc = true

        //and hate reading sources :)
        downloadSources = true
    }
}